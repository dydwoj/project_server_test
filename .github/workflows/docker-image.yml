name: Build and Push Docker Images

on:
  push:
    branches: ["main"]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Backend Maven Build
      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: Build backend with Maven
        working-directory: soltech/project
        run: mvn -B package -DskipTests

      # Build & Push Backend
      - name: Build & Push Backend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/soltech-backend:latest \
            -f soltech/project/Dockerfile soltech/project
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/soltech-backend:latest

      # Build frontend
      - name: Build frontend
        working-directory: soltechreact
        run: |
          yarn install --frozen-lockfile
          yarn build

      # Build & Push Frontend
      - name: Build & Push Frontend Docker Image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/soltech-frontend:latest \
            -f soltechreact/Dockerfile soltechreact
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/soltech-frontend:latest

      # EC2에 대상 폴더 생성
      - name: Create target dir on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: mkdir -p /home/ubuntu/insert-sql

      # SQL 파일 EC2로 업로드
      - name: Upload insert-sql to EC2
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          source: "soltech/project/insert-sql/*"
          target: "/home/ubuntu/insert-sql"

      - name: Verify insert-sql on EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            ls -l /home/ubuntu/insert-sql

      # EC2 접속 후 배포 (SQL 문도 같이)
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            docker stop soltech-backend || true
            docker stop soltech-frontend || true
            docker rm soltech-backend || true
            docker rm soltech-frontend || true

            docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/soltech-backend:latest || true
            docker rmi ${{ secrets.DOCKERHUB_USERNAME }}/soltech-frontend:latest || true

            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/soltech-backend:latest
            docker pull ${{ secrets.DOCKERHUB_USERNAME }}/soltech-frontend:latest

            echo "${{ secrets.DOCKER_ENV_DB }}" > /home/ubuntu/db.env
            echo "${{ secrets.DOCKER_ENV_GOOGLE }}" > /home/ubuntu/google.env
            echo "${{ secrets.DOCKER_ENV_JWT }}" > /home/ubuntu/jwt.env

            docker run -d --name soltech-backend \
              --env-file /home/ubuntu/db.env \
              --env-file /home/ubuntu/google.env \
              --env-file /home/ubuntu/jwt.env \
              -p 8080:8080 \
              ${{ secrets.DOCKERHUB_USERNAME }}/soltech-backend:latest \
              --spring.profiles.active=prod

            sleep 10

            docker exec -i mysql mysql -u root -p${{ secrets.DB_ROOT_PASSWORD }} ${{ secrets.DB_NAME }} < /home/ubuntu/insert-sql/01_job_rank_seed_test.sql
            docker exec -i mysql mysql -u root -p${{ secrets.DB_ROOT_PASSWORD }} ${{ secrets.DB_NAME }} < /home/ubuntu/insert-sql/02_department_seed_test.sql
            docker exec -i mysql mysql -u root -p${{ secrets.DB_ROOT_PASSWORD }} ${{ secrets.DB_NAME }} < /home/ubuntu/insert-sql/03_employee_seed_test.sql

            docker run -d --name soltech-frontend -p 5173:5173 \
              ${{ secrets.DOCKERHUB_USERNAME }}/soltech-frontend:latest
